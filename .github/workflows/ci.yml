name: AXCP CI

on:
  push:
    branches: 
      - main
      - 'chore/ci-go-workspaces'
  pull_request:
    branches: [ main ]

# Cache per le dipendenze
env:
  GO_VERSION: '1.22.7'
  PYTHON_VERSION: '3.11'
  PROTOC_VERSION: '25.1'

jobs:
  test-go:
    name: Test Go
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Install protoc
        run: |
          sudo apt-get update -y
          sudo apt-get install -y protobuf-compiler

      - name: Install protoc-gen-go
        run: go install google.golang.org/protobuf/cmd/protoc-gen-go@latest

      - name: Generate Go stubs
        working-directory: sdk/go
        run: |
          protoc -I ../../proto \
            --go_out=internal/pb --go_opt=paths=source_relative \
            ../../proto/axcp.proto

      - name: Tidy Go modules
        working-directory: sdk/go
        run: go mod tidy

      - name: Run Go tests (per-module)
        run: |
          set -e
          for m in sdk/go gateway/go examples/go/simple_chat; do
            echo "â€º go test $m/..."
            (cd $m && go test -v -race ./...)
          done

      - name: Run code coverage
        working-directory: sdk/go
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

  test-python:
    name: Test Python
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install grpcio-tools pytest aioquic protobuf pytest-cov

      - name: Generate Python stubs
        run: |
          python -m grpc_tools.protoc -I=proto --python_out=proto proto/axcp.proto

      - name: Run Python tests
        run: |
          export PYTHONPATH=$GITHUB_WORKSPACE
          pytest -q scripts gateway tests/dp

      - name: Run QUIC RTT micro-bench
        run: python bench/quic/rtt_bench.py 20  # Ridotto da 200 a 20 iterazioni
        
      - name: Run codec benchmarks (quick)
        working-directory: sdk/go
        run: go test ./bench/... -bench=. -benchtime=1x -benchmem

  test-gateway-telemetry:
    name: Test Gateway Telemetry
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Install protoc
        run: |
          sudo apt-get update -y
          sudo apt-get install -y protobuf-compiler

      - name: Install protoc-gen-go
        run: go install google.golang.org/protobuf/cmd/protoc-gen-go@latest

      - name: Generate Go stubs
        working-directory: sdk/go
        run: |
          protoc -I ../../proto \
            --go_out=internal/pb --go_opt=paths=source_relative \
            ../../proto/axcp.proto

      - name: Tidy Go modules
        working-directory: sdk/go
        run: go mod tidy

      - name: Run Go tests
        working-directory: sdk/go
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Run Gateway Telemetry tests
        working-directory: edge/gateway
        run: go test -v -race ./...

  check-examples:
    name: Check Examples
    needs: [test-go]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Check examples build
        working-directory: examples/go/simple_chat
        run: |
          go mod init example/simple_chat 2>/dev/null || true
          go mod tidy
          go vet .
