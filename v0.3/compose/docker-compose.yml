# SPDX-License-Identifier: Apache-2.0
# Placeholder â€“ v0.3 structure only
version: '3.8'

services:
  # Edge Gateway Service
  gateway:
    build:
      context: ../../v0.3/edge/gateway
      dockerfile: Dockerfile
    ports:
      - "7143:7143"
    volumes:
      - ./certs:/certs:ro
      - gateway-data:/data
    environment:
      - RUST_LOG=info
    depends_on:
      - mosquitto
      - otel-collector
    networks:
      - axcp-net

  # MQTT Broker
  mosquitto:
    image: eclipse-mosquitto:2.0
    ports:
      - "1883:1883"
    volumes:
      - ../../v0.3/edge/mqtt/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mosquitto-data:/mosquitto/data
    networks:
      - axcp-net

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:1.39
    ports:
      - "16686:16686"  # UI
      - "14250:14250"  # Model proto
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - axcp-net

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector:0.68.0
    command: ["--config=/etc/otel-config.yaml"]
    volumes:
      - ../../v0.3/telemetry/otel/otel-config.yaml:/etc/otel-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC
      - "55681:55681" # OTLP HTTP
      - "8889:8889"   # Prometheus metrics
    depends_on:
      - jaeger
    networks:
      - axcp-net

  # Prometheus for metrics (optional)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - otel-collector
    networks:
      - axcp-net

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:9.1.0
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - axcp-net

networks:
  axcp-net:
    driver: bridge

volumes:
  gateway-data:
  mosquitto-data:
  grafana-storage:
