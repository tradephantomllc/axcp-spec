syntax = "proto3";

package axcp.v0_1;

// ---------- Envelope ----------
message AxcpEnvelope {
  uint32 version  = 1;  // presently 1
  string trace_id = 2;
  // Static operational profile: 0 = Basic â€¦ 3 = Enterprise-Privacy
  uint32 profile = 3;

    oneof payload {
    ContextPatch       context_patch  = 4;
    CapabilityMessage  capability_msg = 5;
    RoutePolicyMessage route_msg      = 6;
    ErrorMessage       error          = 7;
  }

  bytes signature = 100; // optional, detached
}

// ---------- Context-Sync ----------
message ContextPatch {
  string context_id   = 1;
  uint64 base_version = 2;
  repeated DeltaOp ops = 3;
}

message DeltaOp {
  enum OpType { ADD = 0; REPLACE = 1; REMOVE = 2; }
  OpType op   = 1;
  string path = 2; // JSON-pointer-like
  bytes data  = 3; // gz-compressed payload
}

// ---------- Capability negotiation ----------
message CapabilityOffer   { CapabilityDescriptor desc   = 1; }
message CapabilityRequest { repeated string ids         = 1; }
message CapabilityAck     { repeated string accepted    = 1; }

message CapabilityMessage {
  oneof kind {
    CapabilityOffer   offer   = 1;
    CapabilityRequest request = 2;
    CapabilityAck     ack     = 3;
  }
}

// ---------- Capability descriptor ----------
message CapabilityDescriptor {
  string id      = 1;   // e.g. "search_query"
  string version = 2;   // semver
  repeated string scopes = 3; // permission list
}

// ---------- Routing ----------
message RoutePolicyMessage {
  string policy_id  = 1;
  bytes  policy_blob = 2; // JSON or WASM policy
}

// ---------- Error ----------
message ErrorMessage {
  uint32 code        = 1;
  string reason      = 2;
  bytes  diagnostics = 3;
}
// Error codes used in AxcpEnvelope error messages and system responses
enum ErrorCode {
  UNKNOWN               = 0;  // unspecified failure
  INVALID_CONTEXT       = 1;  // context graph inconsistent or missing
  UNAUTHORIZED          = 2;  // missing or invalid credentials
  TOOL_NOT_FOUND        = 3;  // requested tool/capability unavailable
  TIMEOUT               = 4;  // operation timeout
  UNSUPPORTED_VERSION   = 5;  // protocol version mismatch
  BAD_DELTA             = 6;  // delta patch invalid or unprocessable
  PAYLOAD_TOO_LARGE     = 7;  // envelope exceeds size limit
  MALFORMED_REQUEST     = 8;  // bad structure or required field missing
  TOO_MANY_REQUESTS     = 9;  // rate-limited or quota exceeded
  PROFILE_MISMATCH      = 12; // sender envelope > negotiated
  PROFILE_UNSUPPORTED   = 13; // requested profile not in supported mask
}
